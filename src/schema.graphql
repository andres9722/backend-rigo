# import * from './generated/prisma.graphql'

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
}

type SuccessMessage {
  message: String
}

type Mutation {
  createTrainer(name: String!, email: String!): Trainer!
  updateTrainer(
    data: TrainerUpdateInput!
    where: TrainerWhereUniqueInput!
  ): Trainer
  deleteTrainer(where: TrainerWhereUniqueInput!): Trainer

  createSport(
    name: String!
    capacity: Int!
    type: String!
    trainerId: ID!
    students: [StudentCreateInput!]!
  ): Sport!
  updateSport(
    name: String!
    capacity: Int!
    type: String!
    trainerId: ID!
    where: SportWhereUniqueInput!
  ): Sport
  deleteSport(where: SportWhereUniqueInput!): Sport

  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!

  updatePermissions(permissions: [Permission], userId: ID!): User
}

type Query {
  me: User

  users: [User]!
  trainers(
    where: TrainerWhereInput
    orderBy: TrainerOrderByInput
    skip: Int
    first: Int
  ): [Trainer]!
  trainer(where: TrainerWhereUniqueInput!): Trainer
  trainersConnection(where: TrainerWhereInput): TrainerConnection

  sports(
    where: SportWhereInput
    orderBy: SportOrderByInput
    skip: Int
    first: Int
  ): [Sport]!
  sport(where: SportWhereUniqueInput!): Sport
  sportsConnection(where: SportWhereInput): SportConnection
}
